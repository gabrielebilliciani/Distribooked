package it.unipi.distribooked.mapper;

import it.unipi.distribooked.dto.ReservationDTO;
import it.unipi.distribooked.model.Reservation;
import org.mapstruct.Mapper;
import org.mapstruct.Mapping;
import org.mapstruct.Named;

@Mapper(componentModel = "spring")
public interface ReservationMapper {

    // Map Reservation to ReservationDTO
    @Mapping(target = "userId", source = "userId", qualifiedByName = "objectIdToString")
    @Mapping(target = "bookId", source = "bookId", qualifiedByName = "objectIdToString")
    @Mapping(target = "libraryId", source = "libraryId", qualifiedByName = "objectIdToString")
    ReservationDTO toReservationDTO(Reservation reservation);

    // Map ReservationDTO to Reservation
    @Mapping(target = "id", ignore = true) // ID will be generated by MongoDB
    @Mapping(target = "userId", source = "userId", qualifiedByName = "stringToObjectId")
    @Mapping(target = "bookId", source = "bookId", qualifiedByName = "stringToObjectId")
    @Mapping(target = "libraryId", source = "libraryId", qualifiedByName = "stringToObjectId")
    Reservation toReservation(ReservationDTO dto);

    @Named("objectIdToString")
    default String objectIdToString(org.bson.types.ObjectId id) {
        return id != null ? id.toString() : null;
    }

    @Named("stringToObjectId")
    default org.bson.types.ObjectId stringToObjectId(String id) {
        return id != null ? new org.bson.types.ObjectId(id) : null;
    }
}